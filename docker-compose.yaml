version: '3.3'
services:
  php_posting:
    build:
      context: php_posting
      dockerfile: .docker/Dockerfile
    image: ${PHP_IMAGE}
    container_name: ${PHP_CONTAINER}
#    restart: always
    working_dir: /app
    environment:
      - APP_ENV=${PHP_ENVIRONMENT}
    volumes:
    - ./php_posting/src:/app
    ports:
    - 9000:9000
    networks:
    - bcnismagic_internal

  db_postgres:
#    build:
#      context: db_postgres
#      dockerfile: .docker/Dockerfile
#    image: ${POSTGRES_IMAGE}
    image: postgres:11.4-alpine
    container_name: ${POSTGRES_CONTAINER}
#    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: ${POSTGRES_PGDATA}
    volumes:
    - ./db_postgres/data:${POSTGRES_PGDATA}
    ports:
    - 5432:5432
    networks:
    - bcnismagic_internal
    - bcnismagic_external

  search_elasticsearch:
#    build:
#      context: search_elasticsearch
#      dockerfile: .docker/Dockerfile
#    image: ${ELASTICSEARCH_IMAGE}
    image: docker.elastic.co/elasticsearch/elasticsearch:7.2.0
    container_name: ${ELASTICSEARCH_CONTAINER}
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    networks:
      - bcnismagic_internal
      - bcnismagic_external

volumes:
  esdata:
    driver: local


networks:
  bcnismagic_internal:
    driver: bridge
  bcnismagic_external:
    external: true
